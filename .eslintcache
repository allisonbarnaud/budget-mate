[{"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/index.js":"1","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/App.js":"2","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/reportWebVitals.js":"3","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Pages/index.js":"4","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Pages/Pages.js":"5","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Transactions.js":"6","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Login.js":"7","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Signup.js":"8","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Savings.js":"9","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Profile-settings.js":"10","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Spending-performance.js":"11","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Monthly-breakdown.js":"12","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/dashboard/Transactions-dash.js":"13"},{"size":543,"mtime":1606908736824,"results":"14","hashOfConfig":"15"},{"size":887,"mtime":1606997792345,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606779938729,"results":"17","hashOfConfig":"15"},{"size":24,"mtime":1606801170985,"results":"18","hashOfConfig":"15"},{"size":3672,"mtime":1607040240263,"results":"19","hashOfConfig":"15"},{"size":6355,"mtime":1607009646993,"results":"20","hashOfConfig":"15"},{"size":1213,"mtime":1606867537732,"results":"21","hashOfConfig":"15"},{"size":2042,"mtime":1606915977301,"results":"22","hashOfConfig":"15"},{"size":1158,"mtime":1607004713625,"results":"23","hashOfConfig":"15"},{"size":525,"mtime":1606994900181,"results":"24","hashOfConfig":"15"},{"size":1923,"mtime":1607009194200,"results":"25","hashOfConfig":"15"},{"size":1789,"mtime":1607009395382,"results":"26","hashOfConfig":"15"},{"size":1868,"mtime":1607008498088,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"hnbd56",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/index.js",[],["60","61"],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/App.js",["62"],"import './App.css';\nimport { HashRouter, Route, Switch, NavLink } from \"react-router-dom\";\nimport { dashboard, transactions, spendingStats, monthlyBreakdown, profilePage, login, signup, savingsTracking } from \"./Pages\";\n// import TransactionsComp from './Transactions'\n\nexport const App = () => {\n  return (\n      <HashRouter>\n      <Switch>\n        <Route exact path='/' component={dashboard}/>\n        <Route path='/transactions' component={transactions}/>\n        <Route path='/spendingStats' component={spendingStats}/>\n        <Route path='/monthlyBreakdown' component={monthlyBreakdown}/>\n        <Route path='/profilePage' component={profilePage}/>\n        <Route path='/login' component={login}/>\n        <Route path='/signup' component={signup}/>\n        <Route path='/savingsTracking' component={savingsTracking}/>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/reportWebVitals.js",[],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Pages/index.js",[],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Pages/Pages.js",[],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Transactions.js",["63"],"import React, { Component } from 'react'\nimport '../switch.css'\nimport './transactions.css'\nimport { Dropdown } from 'semantic-ui-react'\nimport { transactions } from '../Pages'\nconst axios = require('axios')\n\nconst id = 1\n\nconst categoryArray = [\n    {text: \"Housing\", value:\"Housing\"},\n    {text: \"Transportation\", value:\"Transportation\"},\n    {text: \"Food\", value:\"Food\"},\n    {text: \"Utilities\", value:\"Utilities\"},\n    {text: \"Clothing\", value:\"Clothing\"},\n    {text: \"Healthcare\", value:\"Healthcare\"},\n    {text: \"Household items\", value:\"Household items\"},\n    {text: \"Personal\", value:\"Personal\"},\n    {text: \"Savings\", value:\"Savings\"},\n    {text: \"Entertainment\", value:\"Entertainment\"},\n    {text: \"Other\", value:\"Other\"}\n]\n\nclass Transactions extends Component {\n    state = {\n        amount: '',\n        details: '',\n        date: '',\n        category: '',\n        additional: '',\n        toggle: false,\n        transactions: []\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n        console.log(value)\n    }\n\n    handleSwitch = () => {\n        this.setState(state => ({\n            toggle: !state.toggle\n        }))\n    }\n    handleCategory = (event) => {\n        this.setState(({\n            //finds the index of the clicked array item of the dropdown menu\n            category: categoryArray[categoryArray.findIndex(item => item.text === event.target.textContent)].value\n        }))\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        axios.post('/new_transactions', {\n            body: this.state\n        })\n        .then(res => {\n          this.showTransactions()\n          alert('transaction successfully added')\n        })\n        .catch(err => {\n          console.error(err);\n          alert('Error adding new transaction');\n        });\n    }\n\n    showTransactions = () => {\n        axios\n            .get(`/new_transactions/${id}`)\n            .then(result => {\n                this.setState({\n                    transactions: result.data.data.results\n                })\n                console.log(result.data.data.results)\n            }\n            )\n    }\n\n    componentDidMount = () => {\n        this.showTransactions()\n    }\n    \n    render() {\n// transactions should be able to be edited or deleted\n\n        return (\n            <div style={{margin: \"auto\",\n                width: \"50%\"}}>\n                <section style={{margin: \"auto\",\n                width: \"50%\"}}>\n                <h1 style={{marginLeft: \"4%\"}}>Add new transaction</h1>\n                <form onSubmit = {this.onSubmit}>\n                    <section>\n                        <input className=\"input\"\n                            type=\"number\"\n                            name=\"amount\"\n                            onChange={this.handleInputChange} \n                            value={this.state.amount}\n                            placeholder=\"$\"\n                            required\n                        />\n                        \n                    </section>\n                    <section>\n                        <input className=\"input\"\n                            type=\"text\"\n                            name=\"details\"\n                            onChange={this.handleInputChange} \n                            value={this.state.details}\n                            placeholder=\"Description\"\n                            required\n                        />\n                    </section>\n                    <section>\n                        <input className=\"input\"\n                            type=\"date\"\n                            name=\"date\"\n                            onChange={this.handleInputChange} \n                            value={this.state.date}\n                            placeholder=\"date of transaction\"\n                            required\n                        />\n                    </section>\n                    <section className=\"input\">\n                        <Dropdown \n                            placeholder='Select category'\n                            fluid\n                            selection\n                            name=\"category\"\n                            onChange={this.handleCategory}\n                            options={categoryArray}\n                            value={this.state.category}\n                        />\n                    </section>\n                    <section>\n                        <input className=\"input\"\n                            type=\"text\"\n                            name=\"additional\" \n                            onChange={this.handleInputChange}\n                            value={this.state.additional}\n                            placeholder=\"additional info (optional)\"\n                        />\n                    </section>\n                    <h3 className=\"switchLabel\">spend</h3>\n                    <label className=\"switch\">\n                        <input \n                        type=\"checkbox\"\n                        name=\"toggle\"\n                        onClick={this.handleSwitch}\n                        value={this.state.toggle}\n                    />\n                    <span className=\"slider round\"></span>    \n                    </label>\n                    <h3 className=\"switchLabel\">deposit</h3>\n                    <input type=\"submit\" value=\"Confirm\"/>\n                </form>\n                </section>\n                \n                <div>\n                    <h1 style={{margin: \"20px 0px 0px 260px\"}}>Transactions History</h1>\n                    {this.state.transactions.map(transaction => (\n                        <div key={transaction.id} className=\"transactionItem\">\n                            <div style={{display: \"inline\"}}>{transaction.details}</div>\n                            {transaction.depositwithdraw? <div style={{textAlign: \"right\"}}>+${transaction.amount}</div>: <div style={{textAlign: \"right\"}}>-${transaction.amount}</div>}\n                            <div>{transaction.category}</div>\n                            <div>{transaction.transactiondate.slice(0,10)}</div>\n                            <div>{transaction.additionalinfo}</div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Transactions","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Login.js",[],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Signup.js",[],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Savings.js",[],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Profile-settings.js",[],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Spending-performance.js",[],"/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/Monthly-breakdown.js",["64"],"import React, { Component } from 'react'\nimport {\n  PieChart, Pie, Legend, Tooltip, Cell\n} from 'recharts';\nconst axios = require('axios')\n\nconst data01 = [\n    { name: 'Group A', value: 400 }, { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 }, { name: 'Group D', value: 200 },\n    { name: 'Group E', value: 278 }, { name: 'Group F', value: 189 },\n  ];\n\nclass MonthlyBreakdown extends Component {\n    state = {\n        categories: []\n    }\n\n    showTransactions = () => {\n        axios\n            .get(`/new_transactionsForPie`)\n            .then(result => {\n                this.setState({\n                    categories: result.data.data.results\n                })\n                console.log(result.data.data.results)\n            }\n        )\n    }\n\n    renderPieChart = (data, colors) => (\n        <PieChart width={800} height={700}>\n          <Pie dataKey=\"amount\" data={data} cx={400} cy={300} outerRadius={250} fill=\"lightBlue\" label > \n            {\n                data.map((entry, index) => <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />)\n\t\t    }\n          </Pie>\n          <Legend />\n          <Tooltip />\n        </PieChart>\n    )\n\n    componentDidMount = () => {\n        this.showTransactions()\n    }\n\n    render () {\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#6E2C35', '#142F3A', '#FFB6B6', '#8C198C', '#15FB00', '#000000'];\n\n        const data = this.state.categories.map(result => (\n            {\n                name: result.category,\n                amount: parseInt(result.sumamount)\n            }\n        ))\n\n        return (\n            <div>\n                <h2 style={{marginLeft:\"28%\"}}>{this.renderPieChart(data, COLORS)}</h2>\n            </div>\n        )\n    }\n\n}\n\nexport default MonthlyBreakdown","/home/allisonb/Documents/GA_software_engineering/12-project4/budget-mate/src/Components/dashboard/Transactions-dash.js",["65"],"import React, { Component } from 'react'\nimport '../transactions.css'\nconst axios = require('axios')\n\nconst id = 1\n\nclass TransactionsDash extends Component {\n    state = {\n        amount: '',\n        details: '',\n        date: '',\n        category: '',\n        additional: '',\n        toggle: false,\n        transactions: []\n    }\n\n    showTransactions = () => {\n        axios\n            .get(`/new_transactions5`)\n            .then(result => {\n                this.setState({\n                    transactions: result.data.data.results\n                })\n                console.log(result.data.data.results)\n            }\n            )\n    }\n\n    componentDidMount = () => {\n        this.showTransactions()\n    }\n    \n    render() {\n// transactions should be able to be edited or deleted\n\n        return (\n            <div style={{margin: \"auto\",\n                width: \"50%\"}}>\n                <div>\n                    <h2 style={{margin: \"20px 0px 0px 10px\", width:\"100%\"}}>Latest Transactions</h2>\n                    {this.state.transactions.map(transaction => (\n                        <div key={transaction.id} className=\"transactionItem\">\n                            <div style={{textAlign: \"left\"}}>{transaction.details}</div>\n                            {transaction.depositwithdraw? <div style={{textAlign: \"right\"}}>+${transaction.amount}</div>: <div style={{textAlign: \"right\"}}>-${transaction.amount}</div>}\n                            <div style={{textAlign: \"left\"}}>{transaction.category}</div>\n                            <div style={{textAlign: \"left\"}}>{transaction.transactiondate.slice(0,10)}</div>\n                            <div style={{textAlign: \"left\"}}>{transaction.additionalinfo}</div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default TransactionsDash",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":37,"nodeType":"74","messageId":"75","endLine":2,"endColumn":44},{"ruleId":"72","severity":1,"message":"76","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":22},{"ruleId":"72","severity":1,"message":"77","line":7,"column":7,"nodeType":"74","messageId":"75","endLine":7,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":5,"column":7,"nodeType":"74","messageId":"75","endLine":5,"endColumn":9},{"ruleId":"68","replacedBy":"79"},{"ruleId":"70","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'transactions' is defined but never used.","'data01' is assigned a value but never used.","'id' is assigned a value but never used.",["81"],["82"],"no-global-assign","no-unsafe-negation"]